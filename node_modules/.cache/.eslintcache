[{"C:\\Users\\Dan\\Documents\\ChefTooty\\Github\\spoon\\src\\index.js":"1","C:\\Users\\Dan\\Documents\\ChefTooty\\Github\\spoon\\src\\reportWebVitals.js":"2","C:\\Users\\Dan\\Documents\\ChefTooty\\Github\\spoon\\src\\App.js":"3","C:\\Users\\Dan\\Documents\\ChefTooty\\Github\\spoon\\src\\redux\\store.js":"4","C:\\Users\\Dan\\Documents\\ChefTooty\\Github\\spoon\\src\\styles\\globalStyles.js":"5","C:\\Users\\Dan\\Documents\\ChefTooty\\Github\\spoon\\src\\redux\\blockchain\\blockchainReducer.js":"6","C:\\Users\\Dan\\Documents\\ChefTooty\\Github\\spoon\\src\\redux\\data\\dataActions.js":"7","C:\\Users\\Dan\\Documents\\ChefTooty\\Github\\spoon\\src\\redux\\data\\dataReducer.js":"8","C:\\Users\\Dan\\Documents\\ChefTooty\\Github\\spoon\\src\\redux\\blockchain\\blockchainActions.js":"9"},{"size":629,"mtime":1658589504968,"results":"10","hashOfConfig":"11"},{"size":375,"mtime":1658589504970,"results":"12","hashOfConfig":"11"},{"size":8608,"mtime":1658606377986,"results":"13","hashOfConfig":"11"},{"size":579,"mtime":1658589504970,"results":"14","hashOfConfig":"11"},{"size":1870,"mtime":1658592524663,"results":"15","hashOfConfig":"11"},{"size":893,"mtime":1658589504969,"results":"16","hashOfConfig":"11"},{"size":1124,"mtime":1658589504970,"results":"17","hashOfConfig":"11"},{"size":878,"mtime":1658590693699,"results":"18","hashOfConfig":"11"},{"size":2387,"mtime":1658601795326,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"qtqjbo",{"filePath":"23","messages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39"},"C:\\Users\\Dan\\Documents\\ChefTooty\\Github\\spoon\\src\\index.js",[],["40","41"],"C:\\Users\\Dan\\Documents\\ChefTooty\\Github\\spoon\\src\\reportWebVitals.js",[],"C:\\Users\\Dan\\Documents\\ChefTooty\\Github\\spoon\\src\\App.js",["42","43","44"],"C:\\Users\\Dan\\Documents\\ChefTooty\\Github\\spoon\\src\\redux\\store.js",[],"C:\\Users\\Dan\\Documents\\ChefTooty\\Github\\spoon\\src\\styles\\globalStyles.js",[],"C:\\Users\\Dan\\Documents\\ChefTooty\\Github\\spoon\\src\\redux\\blockchain\\blockchainReducer.js",[],"C:\\Users\\Dan\\Documents\\ChefTooty\\Github\\spoon\\src\\redux\\data\\dataActions.js",[],"C:\\Users\\Dan\\Documents\\ChefTooty\\Github\\spoon\\src\\redux\\data\\dataReducer.js",[],"C:\\Users\\Dan\\Documents\\ChefTooty\\Github\\spoon\\src\\redux\\blockchain\\blockchainActions.js",["45"],"// constants\r\nimport Web3EthContract from \"web3-eth-contract\";\r\nimport Web3 from \"web3\";\r\nimport SmartContract from \"../../contracts/goofeez.json\";\r\n// log\r\nimport { fetchData } from \"../data/dataActions\";\r\n\r\nconst connectRequest = () => {\r\n  return {\r\n    type: \"CONNECTION_REQUEST\",\r\n  };\r\n};\r\n\r\nconst connectSuccess = (payload) => {\r\n  return {\r\n    type: \"CONNECTION_SUCCESS\",\r\n    payload: payload,\r\n  };\r\n};\r\n\r\nconst connectFailed = (payload) => {\r\n  return {\r\n    type: \"CONNECTION_FAILED\",\r\n    payload: payload,\r\n  };\r\n};\r\n\r\nconst updateAccountRequest = (payload) => {\r\n  return {\r\n    type: \"UPDATE_ACCOUNT\",\r\n    payload: payload,\r\n  };\r\n};\r\n\r\nexport const connect = () => {\r\n  return async (dispatch) => {\r\n    dispatch(connectRequest());\r\n    const { ethereum } = window;\r\n    const metamaskIsInstalled = ethereum && ethereum.isMetaMask;\r\n    if (metamaskIsInstalled) {\r\n      Web3EthContract.setProvider(ethereum);\r\n      let web3 = new Web3(ethereum);\r\n      try {\r\n        const accounts = await ethereum.request({\r\n          method: \"eth_requestAccounts\",\r\n        });\r\n        const networkId = await ethereum.request({\r\n          method: \"net_version\",\r\n        });\r\n        // const NetworkData = await SmartContract.networks[networkId];\r\n        if (networkId == 56) {\r\n          const SmartContractObj = new Web3EthContract(\r\n            SmartContract,\r\n            \"0x66d200d17b077169ba141f4dafe2e40dce635b04\"\r\n          );\r\n          dispatch(\r\n            connectSuccess({\r\n              account: accounts[0],\r\n              smartContract: SmartContractObj,\r\n              web3: web3,\r\n            })\r\n          );\r\n          // Add listeners start\r\n          ethereum.on(\"accountsChanged\", (accounts) => {\r\n            dispatch(updateAccount(accounts[0]));\r\n          });\r\n          ethereum.on(\"chainChanged\", () => {\r\n            window.location.reload();\r\n          });\r\n          // Add listeners end\r\n        } else {\r\n          dispatch(connectFailed(\"Change network to BNB Chain.\"));\r\n        }\r\n      } catch (err) {\r\n        dispatch(connectFailed(\"Something went wrong.\"));\r\n      }\r\n    } else {\r\n      dispatch(connectFailed(\"Install Metamask.\"));\r\n    }\r\n  };\r\n};\r\n\r\nexport const updateAccount = (account) => {\r\n  return async (dispatch) => {\r\n    dispatch(updateAccountRequest({ account: account }));\r\n    dispatch(fetchData(account));\r\n  };\r\n};\r\n",{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","severity":1,"message":"51","line":1,"column":38,"nodeType":"52","messageId":"53","endLine":1,"endColumn":44},{"ruleId":"54","severity":1,"message":"55","line":96,"column":6,"nodeType":"56","endLine":96,"endColumn":26,"suggestions":"57"},{"ruleId":"58","severity":1,"message":"59","line":124,"column":39,"nodeType":"60","messageId":"61","endLine":124,"endColumn":41},{"ruleId":"58","severity":1,"message":"59","line":51,"column":23,"nodeType":"60","messageId":"61","endLine":51,"endColumn":25},"no-native-reassign",["62"],"no-negated-in-lhs",["63"],"no-unused-vars","'useRef' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getData'. Either include it or remove the dependency array.","ArrayExpression",["64"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation",{"desc":"65","fix":"66"},"Update the dependencies array to be: [blockchain.account, getData]",{"range":"67","text":"68"},[2715,2735],"[blockchain.account, getData]"]